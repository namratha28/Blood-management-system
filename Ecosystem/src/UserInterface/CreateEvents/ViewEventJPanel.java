/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.CreateEvents;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.EventsOrganization;
import Business.Organization.Organization;
import Business.Organization.OrganizationDirectory;
import Business.UserAccount.UserAccount;
import Bussiness.WorkQueue.EventRequest;
import Bussiness.WorkQueue.WorkRequest;
import UserInterface.SystemAdmin.SystemAdminWorkAreaJPanel;
import java.awt.CardLayout;
import java.awt.Component;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

/**
 *
 * @author dell_owner
 */
public class ViewEventJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewEventJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private EventsOrganization eventsOrganization;
    private Enterprise enterprise;

    public ViewEventJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.business = business;
        this.eventsOrganization = (EventsOrganization) organization;
        this.enterprise = enterprise;
        this.business=business;
        populateTable();
    }
    
    class LabelRenderer implements TableCellRenderer{
        public Component getTableCellRendererComponent(JTable table, Object value,  boolean isSelected, boolean hasFocus, int row, int column){
            TableColumn tc = table.getColumn("Image");
            tc.setMinWidth(100);
            table.setRowHeight(100);
            return (Component) value;
        }
    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) eventsJTable.getModel();
        model.setRowCount(0); 
        Object[] newIdentifiers = new Object[]{"Creator", "Title", "Location", "Date", "Time", "Image"};
        model.setColumnIdentifiers(newIdentifiers);
        eventsJTable.getColumn("Image").setCellRenderer(new LabelRenderer());
        EventRequest eventRequest=new EventRequest();
        for (WorkRequest request : eventsOrganization.getWorkQueue().getWorkRequestList()){
            if (request.getClass() != null){
                String x = request.getClass().toString();
                System.out.println(x);
                if (x.contains("EventRequest")&& request.getSender().getUsername()==userAccount.getUsername()){
                    EventRequest eventWorkRequest = (EventRequest) request;
                    Object[] row = new Object[6];
                    JLabel imagelabel = new JLabel();
                    ImageIcon imageIcon = new ImageIcon(eventWorkRequest.getImage());
                    Image imageIc = imageIcon.getImage().getScaledInstance(100, 100, Image.SCALE_SMOOTH);
                    imagelabel.setIcon(new ImageIcon(imageIc));
                    row[1] = eventWorkRequest.getTitle();
                    row[2] = eventWorkRequest.getLocation();
                    eventWorkRequest.setSender(userAccount);
                    row[0] =eventWorkRequest;
                    row[3]=eventWorkRequest.getEventDate();
                    row[4]=eventWorkRequest.getTime();
                    row[5]=imagelabel;
                    model.addRow(row);
                }
            }
        }
   
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        eventsJTable = new javax.swing.JTable();
        backBtn = new javax.swing.JButton();

        eventsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Creator", "Title", "Location", "Date", "Time", "Image"
            }
        ));
        jScrollPane1.setViewportView(eventsJTable);

        backBtn.setBackground(new java.awt.Color(253, 134, 75));
        backBtn.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        backBtn.setForeground(new java.awt.Color(254, 254, 254));
        backBtn.setText("Back");
        backBtn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        backBtn.setBorderPainted(false);
        backBtn.setContentAreaFilled(false);
        backBtn.setFocusPainted(false);
        backBtn.setOpaque(true);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTable eventsJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
