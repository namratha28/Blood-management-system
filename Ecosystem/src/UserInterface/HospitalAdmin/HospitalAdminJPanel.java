/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.HospitalAdmin;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Event.HospitalEvent;

import Business.Organization.AdminOrganization;
import Business.Organization.CommonUserOrganization;
import Business.Organization.Organization;

import Business.UserAccount.UserAccount;
import Bussiness.WorkQueue.HospitalInnerRequest;
import Bussiness.WorkQueue.WorkRequest;
import UserInterface.Account.CreateEmployeeJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Huangdong Wen <wen.hu@husky.neu.edu>
 */
public class HospitalAdminJPanel extends javax.swing.JPanel {

    /**
     * Creates new form HospitalAdminJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    AdminOrganization organization;
    Enterprise enterprise;
    EcoSystem business;

    public HospitalAdminJPanel(JPanel userProcessContainer, UserAccount account, AdminOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.business = business;
        this.enterprise = enterprise;
        System.out.println(enterprise.getName());
        this.organization = organization;
        populateCombo();
        populateOrgTable();
        populateEmployeejTable();
        populateWrTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        employeejTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        wrTable = new javax.swing.JTable();
        createBtn = new javax.swing.JButton();
        delEmpBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orgTable = new javax.swing.JTable();
        OrgTypejComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        submitBtn = new javax.swing.JButton();
        delOrgBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        employeejTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "name", "Role"
            }
        ));
        jScrollPane1.setViewportView(employeejTable);
        if (employeejTable.getColumnModel().getColumnCount() > 0) {
            employeejTable.getColumnModel().getColumn(0).setMinWidth(220);
        }

        wrTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "from", "to", "event", "Status"
            }
        ));
        jScrollPane2.setViewportView(wrTable);

        createBtn.setText("Create");
        createBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtnActionPerformed(evt);
            }
        });

        delEmpBtn.setText("Delete");
        delEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delEmpBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Employee Infomation");

        jLabel6.setText("Work Request");

        jLabel1.setText("Organization Information");

        orgTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Organization", "OrganizationId"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(orgTable);

        OrgTypejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        OrgTypejComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrgTypejComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Hospital DashBoard");

        jLabel3.setText("Organization Type");

        submitBtn.setText("Submit");
        submitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBtnActionPerformed(evt);
            }
        });

        delOrgBtn.setText("Delete");
        delOrgBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delOrgBtnActionPerformed(evt);
            }
        });

        jButton1.setText("delete");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel3)
                                .addGap(52, 52, 52)
                                .addComponent(OrgTypejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(submitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(createBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delOrgBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(delEmpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 871, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(482, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(477, 477, 477))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(OrgTypejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(delOrgBtn)
                            .addComponent(submitBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(createBtn)
                        .addGap(18, 18, 18)
                        .addComponent(delEmpBtn)
                        .addGap(69, 69, 69)))
                .addGap(29, 29, 29)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(260, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtnActionPerformed
        CreateEmployeeJPanel panel = new CreateEmployeeJPanel(userProcessContainer, enterprise);
        userProcessContainer.add("CreateEmployeeJPanel", panel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_createBtnActionPerformed

    private void delEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delEmpBtnActionPerformed
        int selectedRow = employeejTable.getSelectedRow();
        if (selectedRow >= 0) {
            UserAccount vs = (UserAccount) employeejTable.getValueAt(selectedRow, 0);
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof CommonUserOrganization) {
                } else {
                    for (UserAccount e : org.getUserAccountDirectory().getUserAccountList()) {
                        if (e == vs) {
                            org.getEmployeeDirectory().getEmployeeList().remove(e.getEmployee());
                            org.getUserAccountDirectory().getUserAccountList().remove(e);
                            break;
                        }
                    }
                }
            }
            JOptionPane.showMessageDialog(null, "Employee information is deleted");
            populateEmployeejTable();

        } else {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }

    }//GEN-LAST:event_delEmpBtnActionPerformed

    private void submitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBtnActionPerformed
        Organization.Type selected = (Organization.Type) OrgTypejComboBox.getSelectedItem();
        Organization org = enterprise.getOrganizationDirectory().createOrganization(selected);
        populateOrgTable();
    }//GEN-LAST:event_submitBtnActionPerformed

    private void delOrgBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delOrgBtnActionPerformed
        int selectedRow = orgTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to delete the organzation", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Organization o = (Organization) orgTable.getValueAt(selectedRow, 0);
            enterprise.getOrganizationDirectory().getOrganizationList().remove(o);
            JOptionPane.showMessageDialog(null, "You have successfully deleted the organization");
            populateOrgTable();
        }
    }//GEN-LAST:event_delOrgBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedRow = wrTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the row to delete the organzation", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            WorkRequest r = (WorkRequest) wrTable.getValueAt(selectedRow, 0);
            enterprise.getWorkQueue().getWorkRequestList().remove(r);
            populateWrTable();
            JOptionPane.showMessageDialog(null, "You have successfully deleted the work requeset!");

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void OrgTypejComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrgTypejComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrgTypejComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox OrgTypejComboBox;
    private javax.swing.JButton createBtn;
    private javax.swing.JButton delEmpBtn;
    private javax.swing.JButton delOrgBtn;
    private javax.swing.JTable employeejTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable orgTable;
    private javax.swing.JButton submitBtn;
    private javax.swing.JTable wrTable;
    // End of variables declaration//GEN-END:variables

    private void populateCombo() {
        OrgTypejComboBox.removeAllItems();
        for (Organization.Type type : Organization.Type.values()) {
            if (type == Organization.Type.Common || type == Organization.Type.Doctor || type == Organization.Type.FrontDesk || type == Organization.Type.Nurse || type == Organization.Type.Admin || type == Organization.Type.HospitalLab) {
                OrgTypejComboBox.addItem(type);
            }
        }
    }

    private void populateOrgTable() {
        DefaultTableModel model = (DefaultTableModel) orgTable.getModel();

        model.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            Object[] row = new Object[2];
            row[0] = org;
            row[1] = org.getOrganizationID();
            model.addRow(row);
        }

    }

    public void populateEmployeejTable() {
        DefaultTableModel model = (DefaultTableModel) employeejTable.getModel();
        model.setRowCount(0);

        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (!(org instanceof CommonUserOrganization)) {
                for (UserAccount u : org.getUserAccountDirectory().getUserAccountList()) {
                    Object[] row = new Object[4];
                    row[0] = u;
                    row[1] = u.getEmployee().getSpecialities();
                    row[2] = u.getEmployee().getRanking();
                    model.addRow(row);
                }
            }
        }
    }

    private void populateWrTable() {

        DefaultTableModel model = (DefaultTableModel) wrTable.getModel();
        model.setRowCount(0);

        for (WorkRequest r : enterprise.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = r;
            row[1] = r.getReceiver();
            row[2] = r.getMessage();
            row[3] = r.getStatus();
            model.addRow(row);

        }
    }
}
